<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.vt.ridenshare.server.dao.UserDao">

    <resultMap type="edu.vt.ridenshare.server.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="carId" column="car_id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="question" column="question" jdbcType="VARCHAR"/>
        <result property="answer" column="answer" jdbcType="VARCHAR"/>
        <result property="activateCode" column="activate_code" jdbcType="VARCHAR"/>
        <result property="activateStatus" column="activate_status" jdbcType="INTEGER"/>
        <result property="expireTime" column="expire_time" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="queryById" resultMap="UserMap">
        select
          id, car_id, username, password, email, phone, question, answer, activate_code, activate_status, expire_time, create_time, update_time
        from user
        where id = #{id}
    </select>

    <select id="findUserByEmail" resultMap="UserMap">
        select
            id, car_id, username, password, email, phone, question, answer, create_time, update_time, activate_status
        from user
        where email = #{email}
    </select>

    <select id="queryByIds" resultMap="UserMap">
        select
            id, car_id, username, password, email, phone, question, answer, create_time, update_time
        from user
        where 1 = 1
        <choose>
            <when test="userIdList.size() > 0">
                and id in
                <foreach collection="userIdList" index="" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </when>
            <otherwise>
                and 1 = 2
            </otherwise>
        </choose>
    </select>

    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, car_id, username, password, email, phone, question, answer, activate_code, activate_status, expire_time, create_time, update_time
        from user
        <where>
            <if test="user.id != null">
                and id = #{user.id}
            </if>
            <if test="user.carId != null">
                and car_id = #{user.carId}
            </if>
            <if test="user.username != null and user.username != ''">
                and username = #{user.username}
            </if>
            <if test="user.password != null and user.password != ''">
                and password = #{user.password}
            </if>
            <if test="user.email != null and user.email != ''">
                and email = #{user.email}
            </if>
            <if test="user.phone != null and user.phone != ''">
                and phone = #{user.phone}
            </if>
            <if test="user.question != null and user.question != ''">
                and question = #{user.question}
            </if>
            <if test="user.answer != null and user.answer != ''">
                and answer = #{user.answer}
            </if>
            <if test="user.activateCode != null and user.activateCode != ''">
                and activate_code = #{user.activateCode}
            </if>
            <if test="user.activateStatus != null">
                and activate_status = #{user.activateStatus}
            </if>
            <if test="user.expireTime != null">
                and expire_time = #{user.expireTime}
            </if>
            <if test="user.createTime != null">
                and create_time = #{user.createTime}
            </if>
            <if test="user.updateTime != null">
                and update_time = #{user.updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="carId != null">
                and car_id = #{carId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="question != null and question != ''">
                and question = #{question}
            </if>
            <if test="answer != null and answer != ''">
                and answer = #{answer}
            </if>
            <if test="activateCode != null and activateCode != ''">
                and activate_code = #{activateCode}
            </if>
            <if test="activateStatus != null">
                and activate_status = #{activateStatus}
            </if>
            <if test="expireTime != null">
                and expire_time = #{expireTime}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <select id="queryByEmailAndPassword" resultMap="UserMap">
        select
            id, car_id, username, email, activate_status, expire_time
        from user
        where email = #{email} and password = #{password}
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(car_id, username, password, email, phone, question, answer, activate_code, activate_status, expire_time, create_time, update_time)
        values (#{carId}, #{username}, #{password}, #{email}, #{phone}, #{question}, #{answer}, #{activateCode}, #{activateStatus}, #{expireTime}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(car_id, username, password, email, phone, question, answer, activate_code, activate_status, expire_time, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.carId}, #{entity.username}, #{entity.password}, #{entity.email}, #{entity.phone}, #{entity.question}, #{entity.answer}, #{entity.activateCode}, #{entity.activateStatus}, #{entity.expireTime}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(car_id, username, password, email, phone, question, answer, activate_code, activate_status, expire_time, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.carId}, #{entity.username}, #{entity.password}, #{entity.email}, #{entity.phone}, #{entity.question}, #{entity.answer}, #{entity.activateCode}, #{entity.activateStatus}, #{entity.expireTime}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        car_id = values(car_id),
        username = values(username),
        password = values(password),
        email = values(email),
        phone = values(phone),
        question = values(question),
        answer = values(answer),
        activate_code = values(activate_code),
        activate_status = values(activate_status),
        expire_time = values(expire_time),
        create_time = values(create_time),
        update_time = values(update_time)
    </insert>

    <update id="update">
        update user
        <set>
            <if test="carId != null">
                car_id = #{carId},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="question != null and question != ''">
                question = #{question},
            </if>
            <if test="answer != null and answer != ''">
                answer = #{answer},
            </if>
            <if test="activateCode != null and activateCode != ''">
                activate_code = #{activateCode},
            </if>
            <if test="activateStatus != null">
                activate_status = #{activateStatus},
            </if>
            <if test="expireTime != null">
                expire_time = #{expireTime},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>

</mapper>

